"""
开发过程中使用线程，在线程间共享多个资源的时候，如果两个线程分别占有一部分资源并且同时等待对方的资源，就会造成死锁
尽管死锁很少发生，但一旦发生就会造成应用的停止响应，程序不做任何事情

比如说A、B分别是t1和t2的两把锁，当A先占用CPU资源时，此时sleep就进入阻塞状态，然后B占用CPU资源在sleep进入阻塞状态，
当A再次被CPU调用要获取B，但是此时B正处于阻塞状态，当处于就绪状态时CPU正被A占用也进不去，此时就造成了死锁。 僵持状态

两个或多个线程需要的资源互相被占用，从而一直陷入等待资源被释放
"""

from threading import Thread, Lock
import time

class MyThread(Thread):
    pass